{
  "address": "0x7bab5d3e304a52D629b94e9529677ac6b05157EA",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WorkGroups__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WorkGroups__SubordinateRoleRequired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WorkGroups__SuperiorRoleRequired",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "department",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "subordinateAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "modification",
          "type": "string"
        }
      ],
      "name": "DepartmentalSubordinateModified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "department",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "superiorAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "DepartmentalSuperiorAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldSuperior",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newSuperior",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "department",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newId",
          "type": "bytes32"
        }
      ],
      "name": "DepartmentalSuperiorModified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "subordinateAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "performanceScore",
          "type": "uint256"
        }
      ],
      "name": "SubordinateAppraisal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "taskID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "enum WorkGroups.Status",
          "name": "taskStatus",
          "type": "uint8"
        }
      ],
      "name": "TaskIssued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "taskID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "enum WorkGroups.Status",
          "name": "taskStatus",
          "type": "uint8"
        }
      ],
      "name": "TaskReport",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "subordinateAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "department",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "superiorId",
          "type": "bytes32"
        }
      ],
      "name": "addSubordinate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "department",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "superiorAddress",
          "type": "address"
        }
      ],
      "name": "appointSuperior",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "departmentalRoles",
      "outputs": [
        {
          "internalType": "enum WorkGroups.RoleType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "departmentalSuperior",
      "outputs": [
        {
          "internalType": "address",
          "name": "superiorAddress",
          "type": "address"
        },
        {
          "internalType": "enum WorkGroups.RoleType",
          "name": "superiorRole",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "department",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "subordinateID",
          "type": "bytes32"
        }
      ],
      "name": "getSubordinate",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "subordinateAddress",
              "type": "address"
            },
            {
              "internalType": "enum WorkGroups.RoleType",
              "name": "subordinateRole",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "performanceScore",
              "type": "uint256"
            }
          ],
          "internalType": "struct WorkGroups.Subordinate",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "department",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "subordinateId",
          "type": "bytes32"
        }
      ],
      "name": "getSubordinateStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "department",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "superiorID",
          "type": "bytes32"
        }
      ],
      "name": "getSuperior",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "superiorAddress",
              "type": "address"
            },
            {
              "internalType": "enum WorkGroups.RoleType",
              "name": "superiorRole",
              "type": "uint8"
            }
          ],
          "internalType": "struct WorkGroups.Superior",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "department",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "superiorId",
          "type": "bytes32"
        }
      ],
      "name": "getSuperiorStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "department",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "taskID",
          "type": "bytes32"
        }
      ],
      "name": "getTask",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "department",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "location",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "enum WorkGroups.Status",
              "name": "taskStatus",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "subordinateAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum WorkGroups.RoleType",
                  "name": "subordinateRole",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "performanceScore",
                  "type": "uint256"
                }
              ],
              "internalType": "struct WorkGroups.Subordinate",
              "name": "taskAssignee",
              "type": "tuple"
            }
          ],
          "internalType": "struct WorkGroups.Task",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "superiorId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "subordinateID",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "department",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "numberOfDays",
          "type": "uint256"
        }
      ],
      "name": "issueTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "taskId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "superiorId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "subordinateId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "department",
          "type": "string"
        }
      ],
      "name": "performTaskAppraisal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "superiorId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "subordinateId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "department",
          "type": "string"
        }
      ],
      "name": "removeSubordinate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "taskID",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "subordinateId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "department",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "statusNumber",
          "type": "uint256"
        }
      ],
      "name": "reportTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "department",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "oldSuperior",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newSuperior",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "subordinateID",
          "type": "bytes32"
        }
      ],
      "name": "upgradeSubordinate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xed5e321cb8e15e665f95371ae49751ca6f31d3522af48ca89811ee903e723533",
  "receipt": {
    "to": null,
    "from": "0xae6009Dd36eBBE2d36DBEBA64004e31517Cc48BB",
    "contractAddress": "0x7bab5d3e304a52D629b94e9529677ac6b05157EA",
    "transactionIndex": 28,
    "gasUsed": "2265443",
    "logsBloom": "0x
    "blockHash": "0xc570991226dd142bc9d61f3436994bca1b11ec4df6033ac3b591f07e517321a0",
    "transactionHash": "0xed5e321cb8e15e665f95371ae49751ca6f31d3522af48ca89811ee903e723533",
    "logs": [
      {
        "transactionIndex": 28,
        "blockNumber": 3508694,
        "transactionHash": "0xed5e321cb8e15e665f95371ae49751ca6f31d3522af48ca89811ee903e723533",
        "address": "0x7bab5d3e304a52D629b94e9529677ac6b05157EA",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ae6009dd36ebbe2d36dbeba64004e31517cc48bb"
        ],
        "data": "0x",
        "logIndex": 45,
        "blockHash": "0xc570991226dd142bc9d61f3436994bca1b11ec4df6033ac3b591f07e517321a0"
      }
    ],
    "blockNumber": 3508694,
    "cumulativeGasUsed": "6477712",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f7d67593ce2112339d338ed7892abcd0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WorkGroups__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WorkGroups__SubordinateRoleRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WorkGroups__SuperiorRoleRequired\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"subordinateAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"modification\",\"type\":\"string\"}],\"name\":\"DepartmentalSubordinateModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"superiorAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"DepartmentalSuperiorAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldSuperior\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newSuperior\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newId\",\"type\":\"bytes32\"}],\"name\":\"DepartmentalSuperiorModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"subordinateAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"performanceScore\",\"type\":\"uint256\"}],\"name\":\"SubordinateAppraisal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"taskID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"enum WorkGroups.Status\",\"name\":\"taskStatus\",\"type\":\"uint8\"}],\"name\":\"TaskIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"taskID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum WorkGroups.Status\",\"name\":\"taskStatus\",\"type\":\"uint8\"}],\"name\":\"TaskReport\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"subordinateAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"superiorId\",\"type\":\"bytes32\"}],\"name\":\"addSubordinate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"superiorAddress\",\"type\":\"address\"}],\"name\":\"appointSuperior\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"departmentalRoles\",\"outputs\":[{\"internalType\":\"enum WorkGroups.RoleType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"departmentalSuperior\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"superiorAddress\",\"type\":\"address\"},{\"internalType\":\"enum WorkGroups.RoleType\",\"name\":\"superiorRole\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"subordinateID\",\"type\":\"bytes32\"}],\"name\":\"getSubordinate\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"subordinateAddress\",\"type\":\"address\"},{\"internalType\":\"enum WorkGroups.RoleType\",\"name\":\"subordinateRole\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"performanceScore\",\"type\":\"uint256\"}],\"internalType\":\"struct WorkGroups.Subordinate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"subordinateId\",\"type\":\"bytes32\"}],\"name\":\"getSubordinateStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"superiorID\",\"type\":\"bytes32\"}],\"name\":\"getSuperior\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"superiorAddress\",\"type\":\"address\"},{\"internalType\":\"enum WorkGroups.RoleType\",\"name\":\"superiorRole\",\"type\":\"uint8\"}],\"internalType\":\"struct WorkGroups.Superior\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"superiorId\",\"type\":\"bytes32\"}],\"name\":\"getSuperiorStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"taskID\",\"type\":\"bytes32\"}],\"name\":\"getTask\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"enum WorkGroups.Status\",\"name\":\"taskStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"subordinateAddress\",\"type\":\"address\"},{\"internalType\":\"enum WorkGroups.RoleType\",\"name\":\"subordinateRole\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"performanceScore\",\"type\":\"uint256\"}],\"internalType\":\"struct WorkGroups.Subordinate\",\"name\":\"taskAssignee\",\"type\":\"tuple\"}],\"internalType\":\"struct WorkGroups.Task\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"superiorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subordinateID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"numberOfDays\",\"type\":\"uint256\"}],\"name\":\"issueTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"taskId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"superiorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subordinateId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"}],\"name\":\"performTaskAppraisal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"superiorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subordinateId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"}],\"name\":\"removeSubordinate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"taskID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subordinateId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"statusNumber\",\"type\":\"uint256\"}],\"name\":\"reportTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oldSuperior\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newSuperior\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"subordinateID\",\"type\":\"bytes32\"}],\"name\":\"upgradeSubordinate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WorkGroups.sol\":\"WorkGroups\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"contracts/WorkGroups.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\nerror WorkGroups__NotOwner();\\r\\nerror WorkGroups__SuperiorRoleRequired();\\r\\nerror WorkGroups__SubordinateRoleRequired();\\r\\n\\r\\ncontract WorkGroups is Ownable {\\r\\n    using Counters for Counters.Counter;\\r\\n    Counters.Counter private _subordinateID;\\r\\n    Counters.Counter private _superiorID;\\r\\n\\r\\n    enum RoleType {\\r\\n        NONE,\\r\\n        SUPERIOR,\\r\\n        SUBORDINATE\\r\\n    }\\r\\n\\r\\n    enum Status {\\r\\n        ISSUED,\\r\\n        IN_PROGRESS,\\r\\n        COMPLETE\\r\\n    }\\r\\n\\r\\n    struct Superior {\\r\\n        address superiorAddress;\\r\\n        RoleType superiorRole;\\r\\n    }\\r\\n\\r\\n    struct Subordinate {\\r\\n        address subordinateAddress;\\r\\n        RoleType subordinateRole;\\r\\n        uint256 performanceScore;\\r\\n    } \\r\\n\\r\\n    // implement a task dashboard on the front end\\r\\n    // implement a departmental/subordinate dashboard also\\r\\n    struct Task {\\r\\n        string department;\\r\\n        string description;\\r\\n        string location;\\r\\n        uint256 deadline;\\r\\n        Status taskStatus;\\r\\n        Subordinate taskAssignee;\\r\\n    }\\r\\n\\r\\n    event DepartmentalSuperiorAssigned(\\r\\n        string department,\\r\\n        address superiorAddress,\\r\\n        bytes32 id\\r\\n    );\\r\\n\\r\\n    event DepartmentalSubordinateModified(\\r\\n        string department,\\r\\n        address subordinateAddress,\\r\\n        bytes32 id,\\r\\n        string modification        \\r\\n    );\\r\\n\\r\\n    event DepartmentalSuperiorModified(\\r\\n        address oldSuperior, \\r\\n        address newSuperior,\\r\\n        string department,\\r\\n        bytes32 newId\\r\\n    );\\r\\n\\r\\n    event TaskIssued(\\r\\n        string description,\\r\\n        string location,\\r\\n        bytes32 taskID,\\r\\n        Status taskStatus\\r\\n    );\\r\\n\\r\\n    event TaskReport(\\r\\n        bytes32 taskID, \\r\\n        string location, \\r\\n        Status taskStatus\\r\\n    );\\r\\n\\r\\n    event SubordinateAppraisal(\\r\\n        address subordinateAddress,\\r\\n        uint256 performanceScore\\r\\n    );\\r\\n\\r\\n    address public admin;\\r\\n\\r\\n    mapping(string => mapping(bytes32 => Task)) departmentalTask;\\r\\n\\r\\n    mapping(string => mapping(bytes32 => Superior)) public departmentalSuperior;\\r\\n    mapping(string => mapping(address => bool)) departmentalSuperiorToBool;\\r\\n\\r\\n    mapping(string => mapping(bytes32 => Subordinate)) departmentalSubordinate;\\r\\n    mapping(string => mapping(address => bool)) departmentalSubordinateToBool;\\r\\n    \\r\\n    mapping(string => mapping(address => RoleType)) public departmentalRoles;\\r\\n    \\r\\n\\r\\n    modifier onlySuperior(string memory department, bytes32 superiorId) {\\r\\n        bool hierarchyStatus = getSuperiorStatus(department, superiorId);\\r\\n        if (hierarchyStatus != true) {\\r\\n            revert WorkGroups__SuperiorRoleRequired();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlySubordinate(string memory department,bytes32 subordinateId) {\\r\\n        bool hierarchyStatus = getSubordinateStatus(department, subordinateId);\\r\\n        if (hierarchyStatus != true) {\\r\\n            revert WorkGroups__SubordinateRoleRequired();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyAdmin() {\\r\\n        if (msg.sender != admin) revert WorkGroups__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        admin = msg.sender;\\r\\n    }\\r\\n\\r\\n    function appointSuperior(\\r\\n        string memory department,\\r\\n        address superiorAddress\\r\\n    ) public onlyAdmin {\\r\\n        _superiorID.increment();\\r\\n        uint256 newSuperiorId = _superiorID.current();\\r\\n        Superior memory newSuperior = Superior(superiorAddress, RoleType.SUPERIOR);\\r\\n        bytes32 superiorID = keccak256(bytes(abi.encode(department, newSuperiorId)));      \\r\\n\\r\\n        departmentalSuperior[department][superiorID] = newSuperior;\\r\\n        departmentalSuperiorToBool[department][superiorAddress] = true;\\r\\n        departmentalRoles[department][superiorAddress] = RoleType.SUPERIOR;\\r\\n\\r\\n        emit DepartmentalSuperiorAssigned(\\r\\n            department,\\r\\n            superiorAddress,\\r\\n            superiorID\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function addSubordinate(\\r\\n        address subordinateAddress,\\r\\n        string memory department,\\r\\n        bytes32 superiorId\\r\\n    ) public onlySuperior(department, superiorId) {\\r\\n        _subordinateID.increment();\\r\\n        uint256 newSubordinateId = _subordinateID.current();\\r\\n        Subordinate memory newSubordinate = Subordinate(subordinateAddress, RoleType.SUBORDINATE, 0);\\r\\n        bytes32 subordinateID = keccak256(bytes(abi.encode(department, newSubordinateId)));\\r\\n\\r\\n\\r\\n        departmentalSubordinate[department][subordinateID] = newSubordinate;\\r\\n        departmentalRoles[department][subordinateAddress] = RoleType.SUBORDINATE;\\r\\n        departmentalSubordinateToBool[department][newSubordinate.subordinateAddress] = true;\\r\\n\\r\\n        emit DepartmentalSubordinateModified(department, subordinateAddress, subordinateID, \\\"added\\\");\\r\\n    }\\r\\n\\r\\n    function removeSubordinate(\\r\\n        bytes32 superiorId,\\r\\n        bytes32 subordinateId, \\r\\n        string memory department\\r\\n    ) public onlySuperior(department, superiorId) {\\r\\n        Subordinate memory existingSubordinate = departmentalSubordinate[department][subordinateId];\\r\\n\\r\\n        departmentalRoles[department][existingSubordinate.subordinateAddress] = RoleType.NONE;\\r\\n        departmentalSubordinateToBool[department][existingSubordinate.subordinateAddress] = false;\\r\\n\\r\\n        emit DepartmentalSubordinateModified(department, existingSubordinate.subordinateAddress, subordinateId, \\\"removed\\\");\\r\\n    }\\r\\n\\r\\n    function upgradeSubordinate(\\r\\n        string memory department,\\r\\n        address oldSuperior, \\r\\n        address newSuperior, \\r\\n        bytes32 subordinateID\\r\\n    ) public onlyAdmin {\\r\\n        _superiorID.increment();\\r\\n        uint256 newSuperiorId = _superiorID.current();\\r\\n        Superior memory superior = Superior(newSuperior, RoleType.SUPERIOR);\\r\\n        bytes32 superiorId = keccak256(bytes(abi.encode(department, newSuperiorId)));\\r\\n\\r\\n        Subordinate memory existingSubordinate = departmentalSubordinate[department][subordinateID];\\r\\n\\r\\n        if(departmentalSubordinateToBool[department][existingSubordinate.subordinateAddress] == true){\\r\\n            departmentalSubordinateToBool[department][existingSubordinate.subordinateAddress] = false;\\r\\n        }\\r\\n\\r\\n        departmentalSuperior[department][superiorId] = superior;\\r\\n\\r\\n        departmentalSuperiorToBool[department][oldSuperior] = false;\\r\\n        departmentalSuperiorToBool[department][existingSubordinate.subordinateAddress] = true;\\r\\n\\r\\n        departmentalRoles[department][oldSuperior] = RoleType.NONE;\\r\\n        departmentalRoles[department][newSuperior] = RoleType.SUPERIOR;\\r\\n\\r\\n        emit DepartmentalSuperiorModified(oldSuperior, newSuperior, department, superiorId);\\r\\n    }\\r\\n\\r\\n    function issueTask(\\r\\n        bytes32 superiorId,\\r\\n        bytes32 subordinateID,\\r\\n        string memory description,\\r\\n        string memory location,\\r\\n        string memory department,\\r\\n        uint256 numberOfDays\\r\\n    ) public onlySuperior(department, superiorId) {\\r\\n        uint deadline = block.timestamp + (numberOfDays * 1 days);\\r\\n        Subordinate memory subordinate = departmentalSubordinate[department][subordinateID];\\r\\n        Task memory newTask = Task(department, description, location, deadline, Status.ISSUED, subordinate );        \\r\\n\\r\\n        bytes32 taskID = keccak256(bytes(string.concat(description, location)));\\r\\n\\r\\n        departmentalTask[department][taskID] = newTask;\\r\\n\\r\\n        emit TaskIssued(description, location, taskID, newTask.taskStatus);\\r\\n    }\\r\\n\\r\\n    function reportTask(\\r\\n        bytes32 taskID,\\r\\n        bytes32 subordinateId,\\r\\n        string memory location,\\r\\n        string memory department,\\r\\n        uint256 statusNumber\\r\\n    ) public onlySubordinate(department, subordinateId) {\\r\\n        Status taskStatus;\\r\\n\\r\\n        if (statusNumber == 1) {\\r\\n            taskStatus = Status.IN_PROGRESS;\\r\\n        } else {\\r\\n            // notify user to select 1 or 2\\r\\n            taskStatus = Status.COMPLETE;\\r\\n        }\\r\\n\\r\\n        Task memory existingTask = departmentalTask[department][taskID];\\r\\n\\r\\n        require(\\r\\n            msg.sender == existingTask.taskAssignee.subordinateAddress,\\r\\n            \\\"Incorrect \\\"\\r\\n        );\\r\\n\\r\\n        existingTask.location = location;\\r\\n        existingTask.taskStatus = taskStatus;\\r\\n\\r\\n        emit TaskReport(taskID, location, taskStatus);\\r\\n    }\\r\\n\\r\\n    function performTaskAppraisal(\\r\\n        bytes32 taskId,\\r\\n        bytes32 superiorId,\\r\\n        bytes32 subordinateId,\\r\\n        string memory department\\r\\n    ) public onlySuperior(department, superiorId) {\\r\\n        Task memory existingTask = departmentalTask[department][taskId];\\r\\n        Subordinate memory currentSubordinate = departmentalSubordinate[department][subordinateId];\\r\\n\\r\\n        if (block.timestamp > existingTask.deadline) {\\r\\n            if (existingTask.taskStatus == Status.COMPLETE) {\\r\\n                currentSubordinate.performanceScore += 1;\\r\\n            } else {\\r\\n                currentSubordinate.performanceScore -= 1;\\r\\n            }\\r\\n        } else {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        emit SubordinateAppraisal(\\r\\n            currentSubordinate.subordinateAddress,\\r\\n            currentSubordinate.performanceScore\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getSuperiorStatus(\\r\\n        string memory department, \\r\\n        bytes32 superiorId\\r\\n    ) public view returns (bool) {\\r\\n        RoleType hierarchyRole = departmentalRoles[department][msg.sender];\\r\\n\\r\\n        address superiorAdress = departmentalSuperior[department][superiorId].superiorAddress;\\r\\n        bool superiorStatus = departmentalSuperiorToBool[department][superiorAdress];\\r\\n\\r\\n        if (hierarchyRole == RoleType.SUPERIOR && superiorStatus == true) {\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getSubordinateStatus(\\r\\n        string memory department,\\r\\n        bytes32 subordinateId\\r\\n    ) public view returns (bool) {\\r\\n        RoleType hierarchyRole = departmentalRoles[department][msg.sender];\\r\\n\\r\\n        address subordinateAddress = departmentalSubordinate[department][subordinateId].subordinateAddress;\\r\\n        bool subordinateStatus = departmentalSubordinateToBool[department][subordinateAddress];\\r\\n\\r\\n        if (hierarchyRole == RoleType.SUBORDINATE && subordinateStatus == true) {\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getTask(string memory department, bytes32 taskID) public view returns (Task memory) {\\r\\n        Task memory existingTask = departmentalTask[department][taskID];\\r\\n        return existingTask;\\r\\n    }\\r\\n\\r\\n    function getSuperior(string memory department, bytes32 superiorID) public view returns(Superior memory) {\\r\\n        Superior memory existingSuperior = departmentalSuperior[department][superiorID];\\r\\n        return existingSuperior;\\r\\n    }\\r\\n\\r\\n\\r\\n    function getSubordinate(string memory department, bytes32 subordinateID) public view returns (Subordinate memory) {\\r\\n        Subordinate memory existingSubordinate = departmentalSubordinate[department][subordinateID];\\r\\n        return existingSubordinate;\\r\\n    }\\r\\n} \\r\\n\\r\\n/*\\r\\n\\r\\nbytes public hierarchySetID\\r\\nmapping(Hierarchy => mapping(string => Hierarchy[])) public nestedDeptHierarchies;\\r\\n\\r\\nfunction nestWorkGroups(\\r\\n    string memory department, \\r\\n    bytes32 superiorId\\r\\n) public onlySuperior(department, superiorId) {\\r\\n        \\r\\n}\\r\\n\\r\\nfunction modifyHierarchySets() onlyAdmin returns () {\\r\\n        \\r\\n}\\r\\n\\r\\n*/\\r\\n\",\"keccak256\":\"0x9c4bfcd695a255b623ae57c80d6d2f09b4ae436e594498aeebf9151b15fb23e7\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 396,
        "contract": "contracts/WorkGroups.sol:WorkGroups",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 11403,
        "contract": "contracts/WorkGroups.sol:WorkGroups",
        "label": "_subordinateID",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(Counter)7549_storage"
      },
      {
        "astId": 11406,
        "contract": "contracts/WorkGroups.sol:WorkGroups",
        "label": "_superiorID",
        "offset": 0,
        "slot": "2",
        "type": "t_struct(Counter)7549_storage"
      },
      {
        "astId": 11499,
        "contract": "contracts/WorkGroups.sol:WorkGroups",
        "label": "admin",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 11506,
        "contract": "contracts/WorkGroups.sol:WorkGroups",
        "label": "departmentalTask",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bytes32,t_struct(Task)11443_storage))"
      },
      {
        "astId": 11513,
        "contract": "contracts/WorkGroups.sol:WorkGroups",
        "label": "departmentalSuperior",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bytes32,t_struct(Superior)11420_storage))"
      },
      {
        "astId": 11519,
        "contract": "contracts/WorkGroups.sol:WorkGroups",
        "label": "departmentalSuperiorToBool",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 11526,
        "contract": "contracts/WorkGroups.sol:WorkGroups",
        "label": "departmentalSubordinate",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bytes32,t_struct(Subordinate)11428_storage))"
      },
      {
        "astId": 11532,
        "contract": "contracts/WorkGroups.sol:WorkGroups",
        "label": "departmentalSubordinateToBool",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 11539,
        "contract": "contracts/WorkGroups.sol:WorkGroups",
        "label": "departmentalRoles",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_enum(RoleType)11410))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(RoleType)11410": {
        "encoding": "inplace",
        "label": "enum WorkGroups.RoleType",
        "numberOfBytes": "1"
      },
      "t_enum(Status)11414": {
        "encoding": "inplace",
        "label": "enum WorkGroups.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_enum(RoleType)11410)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => enum WorkGroups.RoleType)",
        "numberOfBytes": "32",
        "value": "t_enum(RoleType)11410"
      },
      "t_mapping(t_bytes32,t_struct(Subordinate)11428_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct WorkGroups.Subordinate)",
        "numberOfBytes": "32",
        "value": "t_struct(Subordinate)11428_storage"
      },
      "t_mapping(t_bytes32,t_struct(Superior)11420_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct WorkGroups.Superior)",
        "numberOfBytes": "32",
        "value": "t_struct(Superior)11420_storage"
      },
      "t_mapping(t_bytes32,t_struct(Task)11443_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct WorkGroups.Task)",
        "numberOfBytes": "32",
        "value": "t_struct(Task)11443_storage"
      },
      "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_enum(RoleType)11410))": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => mapping(address => enum WorkGroups.RoleType))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_enum(RoleType)11410)"
      },
      "t_mapping(t_string_memory_ptr,t_mapping(t_bytes32,t_struct(Subordinate)11428_storage))": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => mapping(bytes32 => struct WorkGroups.Subordinate))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_struct(Subordinate)11428_storage)"
      },
      "t_mapping(t_string_memory_ptr,t_mapping(t_bytes32,t_struct(Superior)11420_storage))": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => mapping(bytes32 => struct WorkGroups.Superior))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_struct(Superior)11420_storage)"
      },
      "t_mapping(t_string_memory_ptr,t_mapping(t_bytes32,t_struct(Task)11443_storage))": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => mapping(bytes32 => struct WorkGroups.Task))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_struct(Task)11443_storage)"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Counter)7549_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 7548,
            "contract": "contracts/WorkGroups.sol:WorkGroups",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Subordinate)11428_storage": {
        "encoding": "inplace",
        "label": "struct WorkGroups.Subordinate",
        "members": [
          {
            "astId": 11422,
            "contract": "contracts/WorkGroups.sol:WorkGroups",
            "label": "subordinateAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 11425,
            "contract": "contracts/WorkGroups.sol:WorkGroups",
            "label": "subordinateRole",
            "offset": 20,
            "slot": "0",
            "type": "t_enum(RoleType)11410"
          },
          {
            "astId": 11427,
            "contract": "contracts/WorkGroups.sol:WorkGroups",
            "label": "performanceScore",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Superior)11420_storage": {
        "encoding": "inplace",
        "label": "struct WorkGroups.Superior",
        "members": [
          {
            "astId": 11416,
            "contract": "contracts/WorkGroups.sol:WorkGroups",
            "label": "superiorAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 11419,
            "contract": "contracts/WorkGroups.sol:WorkGroups",
            "label": "superiorRole",
            "offset": 20,
            "slot": "0",
            "type": "t_enum(RoleType)11410"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Task)11443_storage": {
        "encoding": "inplace",
        "label": "struct WorkGroups.Task",
        "members": [
          {
            "astId": 11430,
            "contract": "contracts/WorkGroups.sol:WorkGroups",
            "label": "department",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 11432,
            "contract": "contracts/WorkGroups.sol:WorkGroups",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 11434,
            "contract": "contracts/WorkGroups.sol:WorkGroups",
            "label": "location",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 11436,
            "contract": "contracts/WorkGroups.sol:WorkGroups",
            "label": "deadline",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 11439,
            "contract": "contracts/WorkGroups.sol:WorkGroups",
            "label": "taskStatus",
            "offset": 0,
            "slot": "4",
            "type": "t_enum(Status)11414"
          },
          {
            "astId": 11442,
            "contract": "contracts/WorkGroups.sol:WorkGroups",
            "label": "taskAssignee",
            "offset": 0,
            "slot": "5",
            "type": "t_struct(Subordinate)11428_storage"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}